name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - 'mlruns/**'
      - '.gitattributes'
  pull_request:
    branches: [main]

env:
  CSV_URL: "train_pca.csv"

jobs:
  build-and-persist:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Configure Git
      run: |
        git config --global user.name "${{ secrets.username }}"
        git config --global user.email "${{ secrets.email }}"
        git remote set-url origin "https://${{ secrets.username }}:${{ github.token }}@github.com/${{ github.repository }}.git"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12.7"

    - name: Install dependencies
      run: |
        echo "Dataset URL: $CSV_URL"
        pip install --upgrade pip
        pip install mlflow numpy pandas scikit-learn

    - name: Clean transient files
      run: |
        find . -type f \( -name "*.lock" -o -name "*.trc" \) -delete || true

    - name: Sanitize MLflow metadata
      run: |
        # 1) Replace any existing tags: line (even malformed) with a proper empty mapping
        find mlruns/ -name "meta.yaml" \
          -exec sed -i 's|^tags:.*|tags: {}|' {} \; || true

        # 2) For files that had no tags: entry, append it now
        find mlruns/ -name "meta.yaml" | while read file; do
          grep -q '^tags:' "$file" || echo 'tags: {}' >> "$file"
        done

    - name: Run MLflow project in isolated store
      id: mlflow_run
      run: |
        TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
        STORE_DIR="mlruns/ci-${TIMESTAMP}"
        mkdir -p "$STORE_DIR"
        mlflow run . \
          --env-manager=local \
          --experiment-name "CI-${TIMESTAMP}" \
          --backend-store-uri "file://$(pwd)/$STORE_DIR"

    - name: Setup Git LFS
      run: |
        sudo apt-get update && sudo apt-get install -y git-lfs
        git lfs install --local
        git lfs track "mlruns/**"
        git add .gitattributes
        if [ -n "$(git status --porcelain .gitattributes)" ]; then
          git pull --rebase origin main || true
          git commit -m "chore: track mlruns/** with Git LFS"
          git push origin main
        fi

    - name: Persist MLflow runs
      run: |
        if [ -d mlruns ] && [ "$(ls -A mlruns)" ]; then
          git stash --include-untracked
          git pull --rebase origin main || true
          git stash pop || true

          git add -f mlruns/
          git commit -m "feat: save mlruns [$(date +'%Y-%m-%d %H:%M')]" || true
          git push origin main
        else
          echo "::warning::No MLflow runs to persist"
        fi

    - name: Upload to Google Drive
      env:
        GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
        GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
      run: |
        if [ -n "$GDRIVE_CREDENTIALS" ] && [ -n "$GDRIVE_FOLDER_ID" ]; then
          pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client pyyaml
          echo "$GDRIVE_CREDENTIALS" > service-account.json
          python upload_to_gdrive.py
        else
          echo "::warning::GDRIVE secrets not provided. Skipping upload."
        fi

