name: CI-latihan

on:
  push:
    branches: [main]
    paths-ignore: 
      - 'mlruns/**'
      - '.gitattributes'
  pull_request:
    branches: [main]

env:
  CSV_URL: "train_pca.csv"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git
        run: |
          git config --global user.name "${{ secrets.username }}"
          git config --global user.email "${{ secrets.email }}"
          git remote set-url origin "https://${{ secrets.username }}:${{ github.token }}@github.com/${{ github.repository }}.git"

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
          cache: 'pip'

      - name: Verify environment
        run: |
          echo "Dataset URL: $CSV_URL"
          echo "Python version: $(python --version)"
          echo "Pip version: $(pip --version)"

      - name: Install MLflow dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow numpy pandas scikit-learn

      - name: Clean residual locks
        run: |
          find . -name "*.trc" -delete
          find . -name "mlflow.lock" -delete
          find . -name "*.meta" -delete

      - name: Run MLflow project with timestamped experiment
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          mlflow run . --env-manager=local --experiment-name "CI-${TIMESTAMP}"

      - name: Install Google Drive dependencies
        run: |
          pip install --upgrade \
            google-auth \
            google-auth-oauthlib \
            google-auth-httplib2 \
            google-api-python-client \
            pyyaml

      - name: Upload to Google Drive
        env:
          GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: |
          echo "$GDRIVE_CREDENTIALS" > service-account.json
          if python upload_to_gdrive.py; then
            echo "::notice::Google Drive upload successful!"
          else
            echo "::error::Google Drive upload failed"
            exit 1
          fi

      - name: Set up Git LFS (only once per repo)
        if: ${{ !contains(github.event.head_commit.message, 'Track large files') }}
        run: |
          sudo apt-get install -y git-lfs
          git lfs install
          git lfs track "mlruns/**"
          git add .gitattributes
          if [ -n "$(git status --porcelain .gitattributes)" ]; then
            git commit -m "Track large files in mlruns with Git LFS"
            git push origin main
          else
            echo "No changes to .gitattributes"
          fi

      - name: Save new MLflow run artifacts
        run: |
          if [ -z "$(ls -A mlruns/)" ]; then
            echo "::warning::No artifacts found in mlruns/"
            exit 0
          fi

          git pull origin main --rebase || true
          git add -f mlruns/
          git commit -m "Save mlruns from CI run [$(date +'%Y-%m-%d %H:%M')]"

          n=0
          until [ "$n" -ge 3 ]
          do
            git push origin main && break
            n=$((n+1))
            echo "::warning::Push failed, retrying ($n/3)..."
            sleep 5
          done

          if [ "$n" -eq 3 ]; then
            echo "::error::Failed to push artifacts after 3 attempts"
            exit 1
          fi
